---
title: "üå¶Ô∏è Weather Memory: How Morning Weather Predicts Afternoon Delays"
format:
  html:
    toc: true
    code-fold: true
---

```{r}
#| message: false
library(tidyverse)
library(nycflights13)
library(broom)
theme_set(theme_minimal(base_size = 13))
```

We ask: does **morning weather (5‚Äì9 a.m.)** leave a measurable mark on **afternoon departure delays (12‚Äì6 p.m.)**?

```{r}
# Build daily panel
fl_daily <- flights |>
  filter(!is.na(dep_delay), !is.na(dep_time)) |>
  mutate(hour = floor(dep_time/100),
         period = case_when(
           hour >= 5  & hour < 9  ~ "am_5_9",
           hour >= 12 & hour < 18 ~ "pm_12_18",
           TRUE ~ NA_character_
         )) |>
  filter(!is.na(period)) |>
  group_by(year, month, day, period) |>
  summarise(avg_dep_delay = mean(dep_delay, na.rm = TRUE), .groups="drop") |>
  tidyr::pivot_wider(names_from = period, values_from = avg_dep_delay)

wx_am <- weather |>
  filter(hour >= 5, hour < 9) |>
  group_by(year, month, day, origin) |>
  summarise(visib_am = mean(visib, na.rm=TRUE),
            wind_am  = mean(wind_speed, na.rm=TRUE),
            .groups="drop") |>
  group_by(year, month, day) |>
  summarise(across(c(visib_am, wind_am), mean, na.rm=TRUE), .groups="drop")

panel <- fl_daily |>
  inner_join(wx_am, by = c("year","month","day")) |>
  mutate(date = as.Date(sprintf("%04d-%02d-%02d", year, month, day))) |>
  rename(delay_am = am_5_9, delay_pm = pm_12_18) |>
  filter(is.finite(delay_pm), is.finite(delay_am))

panel |>
  ggplot(aes(wind_am, delay_pm)) +
  geom_point(alpha = 0.6) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Morning wind (mph)", y = "Afternoon avg dep delay (min)",
       title = "Windy mornings ‚Üî worse afternoons")
```

*Next:* Add coefficients and interaction tests when you‚Äôre ready.
